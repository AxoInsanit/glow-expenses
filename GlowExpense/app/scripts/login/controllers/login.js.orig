'use strict';

<<<<<<< .merge_file_a07968
angular.module('Login').controller('LoginCtrl', ['$scope', '$location', 'UserSvc', 'errorMsg', 'localStorageSvc',
    'currenciesRepositorySvc', 'currenciesSvc', 'contableCodesRepositorySvc', 'contableCodesSvc', 'sessionToken',
    'userName', 'errorHandlerDefaultSvc', 'expenseSharingSvc',
    function ($scope, $location, UserSvc, errorMsg, localStorageSvc, currenciesRepositorySvc, currenciesSvc,
              contableCodesRepositorySvc, contableCodesSvc, sessionToken, userName, errorHandlerDefaultSvc, expenseSharingSvc) {

        $scope.errorMessage = errorMsg;
        $scope.showErrorMessage = false;
        $scope.loginPage = true;
        $scope.login = function(user){

            function getCurrenciesSuccess(result){
                currenciesSvc.set(result.currencies);
            }

            function getContableCodesSuccess(result){
                contableCodesSvc.set(result.contableCodes);
            }

            function loginSuccess(response) {
                if( localStorageSvc.localStorageExists() ){
                    $scope.showErrorMessage = false;
                    localStorageSvc.setItem(sessionToken, response.session_token);
                    localStorageSvc.setItem(userName, $scope.user.username);

                    currenciesRepositorySvc.getCurrencies(
                        { 'token': localStorageSvc.getItem(sessionToken) },
                        getCurrenciesSuccess,
                        errorHandlerDefaultSvc.handleError
                    );

                    contableCodesRepositorySvc.getContableCodes(
                        { 'token': localStorageSvc.getItem(sessionToken) },
                        getContableCodesSuccess(),
                        errorHandlerDefaultSvc.handleError
                    );

                    expenseSharingSvc.getExpenses().then(function(){
                        $location.path('/expenses');
                    });

                } else {
                    loginError();
                }
            }

            function loginError(errorResponse){
                errorHandlerDefaultSvc.handleError(errorResponse).then(function(){
                    $scope.showErrorMessage = true;
                    $scope.user.password = '';
                });
            }

            //We have to use the actions this way
            UserSvc.login({
                'username': user.username,
                'password': user.password
            }, loginSuccess, loginError);
        };
    }]);
=======
angular.module('Login')
  .controller('LoginCtrl', function ($scope, $location, UserSvc, errorMsg, localStorageSvc, currenciesRepositorySvc,
                                     currenciesSvc, sessionToken, userName, errorHandlerDefaultSvc, expenseSharingSvc,
                                     requestNotificationChannelSvc) {

      var savedToken = localStorageSvc.getItem('session-token');

      function getExpenses() {
        expenseSharingSvc.getExpenses().then(function() {
          $location.path('/expenses');
        }).finally(function() {
          requestNotificationChannelSvc.requestEnded();
        });
      }

      function getCurrencies(token) {
        currenciesRepositorySvc.getCurrencies({
            token: token
          },
          function (result){
            currenciesSvc.set(result.currencies);
          },
          errorHandlerDefaultSvc.handleError
        );
      }

      $scope.login = function() {
          // start loader
          requestNotificationChannelSvc.requestStarted();

          // init login flow
          UserSvc.login().then(function (token) {
              if (localStorageSvc.localStorageExists()) {
                  $scope.showErrorMessage = false;
                  localStorageSvc.setItem(sessionToken, token);

                  getCurrencies(token);
                  getExpenses();

              } else {
                  requestNotificationChannelSvc.requestEnded();
              }
          }, function (){
              errorHandlerDefaultSvc.handleError({});
              requestNotificationChannelSvc.requestEnded();
          });
      };

      // if token exists then proceed
      if (savedToken) {
          getCurrencies(savedToken);
          getExpenses();
      }

  });
>>>>>>> .merge_file_a07432
